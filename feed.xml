<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kaffee Kantate</title>
    <description>Life in Vancouver, Tech, Coffee, etc</description>
    <link>http://blog.kaffeekantate.xyz/</link>
    <atom:link href="http://blog.kaffeekantate.xyz/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 20 Jan 2015 00:50:43 -0800</pubDate>
    <lastBuildDate>Tue, 20 Jan 2015 00:50:43 -0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>ウェブサイトのフルスクリーン表示 (CSS / JavaScript)</title>
        <description>&lt;p&gt;要素のフルスクリーン表示をCSSとJavaScriptそれぞれで実装。
元になるHTMLは以下を使用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
	&amp;lt;section class=&quot;full1&quot;&amp;gt;&amp;lt;p&amp;gt;Page1&amp;lt;/p&amp;gt;&amp;lt;/section&amp;gt;
	&amp;lt;section class=&quot;full2&quot;&amp;gt;&amp;lt;p&amp;gt;Page2&amp;lt;/p&amp;gt;&amp;lt;/section&amp;gt;
	&amp;lt;section class=&quot;full3&quot;&amp;gt;&amp;lt;p&amp;gt;Page3&amp;lt;/p&amp;gt;&amp;lt;/section&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;css1&quot;&gt;CSSその1&lt;/h2&gt;

&lt;p&gt;よく見かける&lt;code&gt;position:absolute&lt;/code&gt;と&lt;code&gt;height:100%&lt;/code&gt;の組み合わせ。
複数の要素をフルスクリーン表示させる場合、それぞれpositionの指定が必要になるため使いづらい。&lt;/p&gt;

&lt;div data-height=&quot;350&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;emWEJJ&quot; data-default-tab=&quot;css&quot; data-user=&quot;kay8&quot; class=&quot;codepen&quot;&gt;&lt;pre&gt;&lt;code&gt;body {
  margin: 0;
  padding: 0;
}
p {
  text-align: center;
  color: white;
  font-size: 2em;
  margin-top: 0;
}
.full1, .full2, .full3 {
  position: absolute;
  height: 100%;
  width: 100%;
  display: block;
}
.full1 {
  background-color: teal;
  top: 0;

}
.full2 {
  background-color: blue;
  top: 100%;
}
.full3 {
  background-color: black;
  top: 200%;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the Pen &lt;a href=&quot;http://codepen.io/kay8/pen/emWEJJ/&quot;&gt;Full Screen: CSS1&lt;/a&gt; by Kei (&lt;a href=&quot;http://codepen.io/kay8&quot;&gt;@kay8&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;css2&quot;&gt;CSSその2&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;height: 100vh&lt;/code&gt;を使った方法。vhはviewport heightの略でビューポートに対する割合を指定可能。上から10%の場合は&lt;code&gt;height: 10vh&lt;/code&gt;。&lt;/p&gt;

&lt;div data-height=&quot;350&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;JoNyGN&quot; data-default-tab=&quot;css&quot; data-user=&quot;kay8&quot; class=&quot;codepen&quot;&gt;&lt;pre&gt;&lt;code&gt;		body {
			margin: 0;
			padding: 0;
		}
		p {
			text-align: center;
			color: white;
			font-size: 2em;
			margin-top: 0;
		}
		.full1, .full2, .full3 {
			height: 100vh;
			width: 100%;
			display: block;
		}
		.full1 {
			background-color: teal;

		}
		.full2 {
			background-color: blue;
		}
		.full3 {
			background-color: black;
		}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the Pen &lt;a href=&quot;http://codepen.io/kay8/pen/JoNyGN/&quot;&gt;Full Screen: CSS2&lt;/a&gt; by Kei (&lt;a href=&quot;http://codepen.io/kay8&quot;&gt;@kay8&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;%による指定との大きな違いは&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;% の場合は対象となる要素のプロパティが親要素のそれと紐付けられるため、必ずしもビューポートの幅が基準になるとは限りません。(中略)vw, vh にはそのようなプロパティの紐付けがありません。(&lt;a href=&quot;http://dev.classmethod.jp/?p=95757&quot;&gt;CSS には vw, vh, vmin, vmax という単位がある ｜ Developers.IO
&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ただし、現時点(2015/1/19)でAndroid Brower4.4以降にしか対応していないため使用するかどうかはまだ微妙なところ。ちなみに2015/1/5時点ではAndroidユーザの中でJelly Beanの割合が約半分(&lt;a href=&quot;http://developer.android.com/about/dashboards/index.html&quot;&gt;Platform Versions&lt;/a&gt;)。&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;JavaScript&lt;/h2&gt;

&lt;p&gt;こちらは&lt;code&gt;getElementsByTagName&lt;/code&gt;で取得したNodeListの要素へstyle属性を設定するもの。単に要素のリストがほしいだけなので&lt;code&gt;getElementsByTagName&lt;/code&gt;を使用。(&lt;a href=&quot;http://news.mynavi.jp/articles/2010/10/01/javascript-nodelist-difference/&quot;&gt;参考: getElementsByTagName()がquerySelectorAll()より高速な理由&lt;/a&gt;)&lt;/p&gt;

&lt;div data-height=&quot;310&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;vEmJLR&quot; data-default-tab=&quot;js&quot; data-user=&quot;kay8&quot; class=&quot;codepen&quot;&gt;&lt;pre&gt;&lt;code&gt;		window.addEventListener(&amp;#x27;load&amp;#x27;, setGreetHeight, false);
		window.addEventListener(&amp;#x27;resize&amp;#x27;, setGreetHeight, false);
		var w = window.innerWidth;

		function setGreetHeight() {
		  var h = window.innerHeight;
		  var sec = document.getElementsByTagName(&amp;#x27;section&amp;#x27;);
		  console.log(sec);
		  for (var i = 0; i &amp;lt; sec.length; i++) {
		  	sec[i].style.height = h + &amp;quot;px&amp;quot;;
		  }
		}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the Pen &lt;a href=&quot;http://codepen.io/kay8/pen/vEmJLR/&quot;&gt;Full Screen: JavaScript&lt;/a&gt; by Kei (&lt;a href=&quot;http://codepen.io/kay8&quot;&gt;@kay8&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;対象となる要素が一つしかない場合は&lt;code&gt;document.getElementById&lt;/code&gt;を使った方がすっきりすると思います。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;その他&lt;/h2&gt;
&lt;p&gt;モバイルでランドスケープ表示にした際、viewport外にある要素が表示されないサイトをたまに見かけるので必要に応じて&lt;code&gt;min-height&lt;/code&gt;の設定を。&lt;/p&gt;

</description>
        <pubDate>Mon, 19 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://blog.kaffeekantate.xyz/full-screen/</link>
        <guid isPermaLink="true">http://blog.kaffeekantate.xyz/full-screen/</guid>
        
        <category>javascript</category>
        
        <category>css</category>
        
        
      </item>
    
      <item>
        <title>JavaScriptによるtarget=&quot;_blank&quot;の指定</title>
        <description>&lt;p&gt;Markdownで記事本文に外部リンクをはった際に自動でtarget=”_blank”が設定されるように以下のコードを追加。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;_blank&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;linksプロパティで文書中のarea/anchor要素をHTMLCollectionとして取得し、現在のURLのホスト名と取得した要素のホスト名が異なっていればtarget = “_blank”を指定。&lt;/p&gt;

&lt;p&gt;ちなみに文書中から全て取得する必要はないので記事のみを対象に
&lt;code&gt;
Document.getElementsByClassName(&#39;post-content&#39;).links
&lt;/code&gt;
とかやってみたものの、linksはdocumentオブジェクトに属するため無理でした
(参考: &lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/document&quot;&gt;documentオブジェクト&lt;/a&gt;)。&lt;/p&gt;

&lt;p&gt;基本的に外部サイトは別タブで開くようにしているので自分の場合はこれで問題ないですが、どうしても個別に指定したい場合はplugin探すか素直にhtml書いたほうがいいですね。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;追記&lt;/h4&gt;
&lt;p&gt;Markdownのパーサーにkramdownを使っていれば&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
[link](url){: attribute=&quot;value&quot;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;が使えるので&lt;code&gt;{:target=&quot;_blank&quot;}&lt;/code&gt;をつけてあげれば対応可能と知りました。まあ過去記事含めて修正したい場合はJS使うのが一番早いですが。&lt;/p&gt;

</description>
        <pubDate>Sun, 18 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://blog.kaffeekantate.xyz/set-target-blank/</link>
        <guid isPermaLink="true">http://blog.kaffeekantate.xyz/set-target-blank/</guid>
        
        <category>javascript</category>
        
        <category>jekyll</category>
        
        
      </item>
    
      <item>
        <title>自家焙煎珈琲みじんこを想う</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2015/0113-mijinco.jpg&quot; alt=&quot;pancake at Mijinco coffee&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;credit&quot;&gt;(Image credit: &lt;a href=&quot;https://www.flickr.com/photos/monana7/8688202215&quot;&gt;Yamashita Yohei&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;個人的に思い出深い&lt;a href=&quot;http://mijinco-coffee.com/&quot;&gt;“自家焙煎珈琲みじんこ”&lt;/a&gt;についての徒然。&lt;/p&gt;

&lt;p&gt;湯島といえば大学時代を過ごした場所ではあるものの、あの界隈のお店は大学生にはあまり安くない。そのため本格的に開拓を始めたのは社会人になってから気分転換の散歩も兼ねてであった。&lt;/p&gt;

&lt;p&gt;そんな中みじんこを知ったのは2011年の夏、湯島にある隠れ家的フレンチ:&lt;a href=&quot;http://bistrot-taka.com/&quot;&gt;ビストロタカ&lt;/a&gt;で食事を終えて御茶の水駅に向かう途中で見かけたのが最初。当時はまだオープンして間もなく客も少なかったためそのときは”こんな店ができたのか”程度でやり過ごした覚えがある。&lt;/p&gt;

&lt;p&gt;その後、実際に訪れたのは同年秋の終わり、おそらく上野のクラシックコンサートに行く前であったと思う。まだまだ客は疎らであったこともありカウンター席で常連らしき方とマスター、バリスタ、パティシエールが世間話をしていたり、電源を借りて作業してる方がいたりと各々に自由な時間が流れるお店であった。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2015/0113-mijinco2.jpg&quot; alt=&quot;interior at Mijinco coffee&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ゆるやかな時間の流れと珈琲の香り、美味しいケーキに惹かれて会社帰りや休日はちらほらみじんこで読書や作業をすることが増えていった。初めてカウンターに座ったのは2012年の春前、カウンターが空いていたことと置かれている小物が気になったためではあるが、お店の人と話してみたいと思っていたのも大きな理由である。話してみるとどの方も気さくで、たわいない雑談をしたり業界事情を教えてくれたりと常連さんが増えている理由が分かった気がした。&lt;/p&gt;

&lt;p&gt;その日以降は他の常連の方とも話す機会が増え、お勧めの紅茶を頂いたり一緒にカフェ巡りをしたりと偶然見つけたカフェから不思議な繋がりができていった。今は留学でバンクーバーにいるが、本格的に留学プランを考えて予算の計算をしたのもみじんこであったと思う。&lt;/p&gt;

&lt;p&gt;居心地がよく珈琲もケーキも美味しいお店なので当然といえば当然だが、2013年に入る頃にはちらほらと雑誌にも取り上げられ、休日はお客さんでいっぱいに。その頃は私も仕事が忙しかったため、代休の平日にたまに訪れる程度になってはいたが平日でもそれなりには混んでいた。お店が繁盛するのは嬉しいがちょっとしたコミュニティ機能が失われつつある寂しさも。とはいえ、もしカウンター席周辺がいつも常連さんでいっぱいだったら私が会話に入っていけたかは怪しい。&lt;/p&gt;

&lt;p&gt;そんなみじんこが文京区本郷に&lt;a href=&quot;http://blog.mijinco-coffee.com/?eid=274&quot;&gt;”ＡＭＭＯＮＩＴＥ　ＣＯＦＦＥＥ　ＭＡＲＫＥＴ”&lt;/a&gt;というスペシャルティコーヒー専門店をオープンするとのこと (Twitterにあがってる&lt;a href=&quot;https://twitter.com/mijincoffee/status/546464900940173312&quot;&gt;写真&lt;/a&gt;がオシャレ)。本郷が個人的に思い出の場所ということもあり帰国したらこちらも訪れてみたい。&lt;/p&gt;

&lt;p&gt;特にオチがあるわけではないが&lt;a href=&quot;http://www.vancitybuzz.com/2014/05/best-independent-coffee-shops-vancouver/&quot;&gt;バンクーバーのローカルカフェ&lt;/a&gt;でもあれほど居心地のいいお店が見つかると嬉しいなと思う今日この頃。(カウンター席のあるお店は少ないし、そこまでざっくばらんに日常会話するには英語力がまだまだ足りないが)&lt;/p&gt;

&lt;p&gt;みじんこのNo.1ブレンドが懐かしくなってきたところで珈琲でも淹れて課題をやろう。ちなみに写真は当時それなりに撮っていたものの大半は日本に置いてきたPCに入っていると思われる。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;自家焙煎珈琲みじんこ&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;東京都文京区湯島2-9-10 湯島三組ビル1F
11：00～20：00
火曜日定休
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;section-1&quot;&gt;ＡＭＭＯＮＩＴＥ　ＣＯＦＦＥＥ　ＭＡＲＫＥＴ (アンモナイト コーヒー マーケット)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;東京都文京区本郷7-2-6 1F
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 13 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://blog.kaffeekantate.xyz/mijinco-coffee/</link>
        <guid isPermaLink="true">http://blog.kaffeekantate.xyz/mijinco-coffee/</guid>
        
        <category>cafe</category>
        
        <category>徒然</category>
        
        
      </item>
    
      <item>
        <title>Sharing-Economy in Vancouver, and Do We Need “Uber”?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2015/0110-sharing1.jpg&quot; alt=&quot;traffic jam in Vancouver&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;credit&quot;&gt;(Image credit: &lt;a href=&quot;https://www.flickr.com/photos/401forester/11741542544&quot;&gt;forester401&lt;/a&gt;)&lt;/p&gt;

&lt;p class=&quot;italic&quot;&gt;This is the same article I posted &lt;a href=&quot;https://medium.
com/@UrbanTraffic/sharing-economy-in-vancouvers-transportation-and-do-we-need-uber-82006aec3c93&quot;&gt;here&lt;/a&gt;, as school project.&lt;/p&gt;

&lt;p&gt;Talking about traffic condition, Vancouver is said to be &lt;a href=&quot;http://www.vancouversun.com/Vancouver+edges+Angeles+worst+traffic+congestion+North+America+index/9132912/story.html&quot;&gt;the worst in North America&lt;/a&gt;; train system is fragile, roads are too crowded, etc. Among the problems, sharing-economy such as &lt;a href=&quot;https://ca.news.yahoo.com/blogs/dailybrew/vancouver-world-class-terrible-traffic-congestion-study-finds-155442354.html&quot;&gt;car share services is considered as one solution&lt;/a&gt; in the Transportation 2040 strategy, aiming to decrease the number of cars in the road.&lt;/p&gt;

&lt;h2 id=&quot;car-sharing-services-in-vancouver&quot;&gt;Car sharing services in Vancouver&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2015/0110-sharing2.jpg&quot; alt=&quot;car2go&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;credit&quot;&gt;(Image credit: &lt;a href=&quot;https://www.flickr.com/photos/pwkrueger/9310764129&quot;&gt;Paul Krueger&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;We can often see small electronic vehicles with white and blue colors, Car2go, in Vancouver’s street. There are 3 car sharing services in Vancouver: Car2go, Modo and Zipcar. All of them say the business is going well, following the transit demand and Vancouver’s plan for green city (Also &lt;a href=&quot;http://metronews.ca/news/vancouver/986202/is-vancouver-the-car-sharing-capital-of-north-america/&quot;&gt;see the comparison in their services&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In fact, the City of Vancouver is supporting this trend by allowing the developers to construct up to five fewer underground parking lots for every sharing car they set (&lt;a href=&quot;http://www.vancouversun.com/business/Vancouver+swaps+parking+requirement+shares/10420303/story.html&quot;&gt;Vancouver swaps parking requirement for car shares&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;more-companies-trying-to-start-business&quot;&gt;More companies trying to start business&lt;/h2&gt;

&lt;p&gt;In addition, following the trend and success in the services, another company, VeloMetro, is planning to start sharing business in Vancouver, for those who do not have driving license and/or want to ride only occasionally, like people in urban residence.&lt;/p&gt;

&lt;p&gt;The service, &lt;a href=&quot;http://vancouver.24hrs.ca/2014/12/02/pedal-powered-cars-eyed-for-vancouver&quot;&gt;pedal powered car&lt;/a&gt;, seems to fit well for the residents feeling bicycle is not enough to carry but car is too spacious.&lt;/p&gt;

&lt;h2 id=&quot;taxi-in-vancouver&quot;&gt;Taxi in Vancouver&lt;/h2&gt;

&lt;p&gt;For those without driver’s license and want to ride mid distance, taxi is one option, however, it is said number of cabs is fewer and price is higher than other cities, according to CTV “&lt;a href=&quot;Report says Vancouver has fewer cabs, pricier rides than other cities&quot;&gt;Report says Vancouver has fewer cabs, pricier rides than other cities&lt;/a&gt;”;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Proctor found the cost of a 10-kilometre fare to be highest in Vancouver, at $22. That’s compared to $17 in Winnipeg, $18 in Calgary and $20 in Toronto.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also having problems like…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Compounding the supply problem: cabs can’t pick up fares outside their city of origin. That means if a Burnaby cab brings a passenger from Burnaby to Vancouver, it can’t pick up another passenger on the way back.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;need-uber&quot;&gt;Need Uber?&lt;/h2&gt;

&lt;p&gt;I found &lt;a href=&quot;https://twitter.com/mikeacton/status/547918707159085056/photo/1&quot;&gt;this tweet&lt;/a&gt; about needs for more transit options.&lt;/p&gt;

&lt;p&gt;Now Uber is planning to launch their business in Vancouver, trying to solve barriers (&lt;a href=&quot;http://www.cbc.ca/news/canada/british-columbia/uber-wants-lawsuit-filed-by-vancouver-taxi-companies-thrown-out-1.2896173&quot;&gt;Uber wants lawsuit filed by Vancouver taxi companies thrown out&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I know so many operation problems on Uber appeared last year, like quality of drivers, management of personal information and so on. However, to specify the infrastructure issue, if Uber is coming to Vancouver, would the transit situation become better?&lt;/p&gt;

&lt;p&gt;Comparison between Uber and Taxi has often been issue especially in terms of its fare. There are pros and cons, and the biggest difference is&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Taxis charge riders per mile when moving, and per minute when idling. Uber chargers riders per mile AND minute whether they’re moving or idling. (&lt;a href=&quot;http://www.businessinsider.com/uber-vs-taxi-pricing-by-city-2014-10&quot;&gt;These Animated Charts Tell You Everything About Uber Prices In 21 Cities&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Based on those comparison, Vancouver, one of the most traffic crowded city, Uber seems not to be cheaper option for users if Uber uses the same fare calculation. However, considering the number of cabs in Vancouver and the city plan to reduce cars, Uber would work as stimulation for improving the traffic condition. Also, it can be good signal for IT startups to launch business in Vancouver since the city tries to attract Tech companies and become hub for them (see “&lt;a href=&quot;http://www.vancouverobserver.com/news/vancouvers-mecca-technology-companies-could-it-become-next-silicon-valley&quot;&gt;Vancouver a growing hub for technology companies&lt;/a&gt;”).&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://blog.kaffeekantate.xyz/sharing-economy-in-vancouver/</link>
        <guid isPermaLink="true">http://blog.kaffeekantate.xyz/sharing-economy-in-vancouver/</guid>
        
        <category>vancouver</category>
        
        <category>english-article</category>
        
        
      </item>
    
      <item>
        <title>Jekyllで作ったブログをGitHub Pagesにホストする</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2015/0108-jekyll.png&quot; alt=&quot;Jekyll&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;credit&quot;&gt;(Image credit: &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;昨年末にブログを作ろう、と思い立ち検討した結果Jekyllになりました。その他の選択肢としては&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://hatenablog.com/&quot;&gt;Hatena blog&lt;/a&gt;, &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;等があったものの、
1:カスタマイズ性に欠けるためメインには使いづらい、
2:管理画面から操作するのが面倒、
3:Go全く分からないのでそもそも完成するか怪しい(面白そうだけど…)&lt;/p&gt;

&lt;p&gt;ということでシンプル且つそれなりに柔軟性がありそうなJekyllに。他の理由としては基本的にcommitとpushしかしていないGit/GitHubとRubyの勉強にもなりそうだという点が大きいです。&lt;/p&gt;

&lt;p&gt;というわけで以下、導入から運用までのメモ。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;導入&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://melborne.github.io/2013/05/20/now-the-time-to-start-jekyll/&quot;&gt;Jekyllいつやるの？ジキやルの？今でしょ！&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2014/08/01/build-blog-jekyll-github-pages/&quot;&gt;Build A Blog With Jekyll And GitHub Pages&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;構造含めてざっと把握したかったのでこの辺りから読みました。途中まで自分で作っていたもののゼロからCSS書くのが面倒になったため最終的に &lt;code&gt;jekyll new&lt;/code&gt; コマンドでひな形作成してカスタマイズ。一つ目はVersion1.0が前提なので最新版とは異なる点もありますが分かりやすかったです。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;ホスト&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/what-are-github-pages/&quot;&gt;What are GitHub Pages?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub Pagesを使えばmasterブランチにコミットするだけでサイトの公開が可能。ただし、GitHub Page上で動的にファイルを生成することができないためPluginは動かず。結局gh-pagesブランチにローカル環境でbuildしたファイルをデプロイすることにしました。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;カスタムドメイン&lt;/h2&gt;

&lt;p&gt;お名前.comで取得したドメインにサブドメイン設定してCNAMEを追加しました。当初Aレコードを追加していましたが”&lt;a href=&quot;https://github.com/blog/1715-faster-more-awesome-github-pages&quot;&gt;このページ(Faster, More Awesome GitHub Pages)&lt;/a&gt;をよく読め”と怒られたので修正。*username.github.ioのusernameには自身のgithubアカウントを設定&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;デプロイ&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://webtech-walker.com/archive/2012/09/fired-myblog.html&quot;&gt;俺の最強ブログシステムも火を噴いてたぜ&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://chikathreesix.com/?p=297&quot;&gt;Jekyll + Github Pagesでブログを作る&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;gh-pagesブランチへの静的ファイルデプロイについては最終的に&lt;a href=&quot;https://github.com/hokaccha/webtech-walker/blob/f2b178baa3bb00776f089f50b7b3e2954c83694c/Rakefile#L10-20&quot;&gt;hokaccha氏&lt;/a&gt;のrakefileを参考にさせて頂きました。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;その他&lt;/h2&gt;
&lt;p&gt;コメント欄は&lt;a href=&quot;https://disqus.com/&quot;&gt;DISQUS&lt;/a&gt;を使って設置している方が多いみたいなので必要になったら要検討。&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://blog.kaffeekantate.xyz/create-blog-by-jekyll/</link>
        <guid isPermaLink="true">http://blog.kaffeekantate.xyz/create-blog-by-jekyll/</guid>
        
        <category>jekyll</category>
        
        <category>github</category>
        
        
      </item>
    
  </channel>
</rss>
